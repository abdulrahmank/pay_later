// Code generated by MockGen. DO NOT EDIT.
// Source: ./dao/user_dao.go

// Package dao is a generated GoMock package.
package dao

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUserDao is a mock of UserDao interface
type MockUserDao struct {
	ctrl     *gomock.Controller
	recorder *MockUserDaoMockRecorder
}

// MockUserDaoMockRecorder is the mock recorder for MockUserDao
type MockUserDaoMockRecorder struct {
	mock *MockUserDao
}

// NewMockUserDao creates a new mock instance
func NewMockUserDao(ctrl *gomock.Controller) *MockUserDao {
	mock := &MockUserDao{ctrl: ctrl}
	mock.recorder = &MockUserDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserDao) EXPECT() *MockUserDaoMockRecorder {
	return m.recorder
}

// SaveUser mocks base method
func (m *MockUserDao) SaveUser(name, mailId string, creditLimit int) error {
	ret := m.ctrl.Call(m, "SaveUser", name, mailId, creditLimit)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveUser indicates an expected call of SaveUser
func (mr *MockUserDaoMockRecorder) SaveUser(name, mailId, creditLimit interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveUser", reflect.TypeOf((*MockUserDao)(nil).SaveUser), name, mailId, creditLimit)
}
